{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8082/api/products';\n  }\n  getProducts() {\n    return this.http.get('http://localhost:8082/api/products');\n  }\n  getProductById(id) {\n    const url = `http://localhost:8082/api/products/${id}`;\n    return this.http.get(url);\n  }\n  addProduct(product) {\n    return this.http.post('http://localhost:8082/api/products', product);\n  }\n  // updateProduct(id:number, product: Product): Observable<Product> {\n  //   return this.http.put<Product>(`http://localhost:8082/api/products/${product.id}`, product);\n  // }\n  deleteProduct(productId) {\n    const url = `http://localhost:8082/api/products/${productId}`;\n    return this.http.delete(url);\n  }\n  updateProduct(product) {\n    const url = `http://localhost:8082/api/products/${product.id}`;\n    return this.http.put(url, product);\n  }\n  searchProducts(name) {\n    const url = `http://localhost:8082/api/products/name/${name}`;\n    return this.http.get(url);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAyBhB,WAAM,GAAG,oCAAoC;EAzBd;EACvCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,oCAAoC,CAAC;EACvE;EAEAC,cAAc,CAACC,EAAU;IACvB,MAAMC,GAAG,GAAG,sCAAsCD,EAAE,EAAE;IACtD,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAUG,GAAG,CAAC;EACpC;EAGAC,UAAU,CAACC,OAAe;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,oCAAoC,EAACD,OAAO,CAAC;EAE1E;EAEA;EACA;EACA;EAEAE,aAAa,CAACC,SAAiB;IAC7B,MAAML,GAAG,GAAG,sCAAsCK,SAAS,EAAE;IAC7D,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAON,GAAG,CAAC;EACpC;EAKAO,aAAa,CAACL,OAAgB;IAC5B,MAAMF,GAAG,GAAG,sCAAsCE,OAAO,CAACH,EAAE,EAAE;IAC9D,OAAO,IAAI,CAACJ,IAAI,CAACa,GAAG,CAAUR,GAAG,EAAEE,OAAO,CAAC;EAC7C;EAGAO,cAAc,CAACC,IAAY;IACzB,MAAMV,GAAG,GAAG,2CAA2CU,IAAI,EAAE;IAC7D,OAAO,IAAI,CAACf,IAAI,CAACE,GAAG,CAAYG,GAAG,CAAC;EACtC;;AAvCWP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAkB,SAAdlB,cAAc;EAAAmB,YAFb;AAAM","names":["ProductService","constructor","http","getProducts","get","getProductById","id","url","addProduct","product","post","deleteProduct","productId","delete","updateProduct","put","searchProducts","name","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\235892\\Desktop\\Final Project\\Capstone-new\\src\\app\\Services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../Model/product';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>('http://localhost:8082/api/products');\r\n  }\r\n\r\n  getProductById(id: number): Observable<Product> {\r\n    const url = `http://localhost:8082/api/products/${id}`;\r\n    return this.http.get<Product>(url);\r\n  }\r\n  \r\n\r\n  addProduct(product:Product):Observable<Product>{\r\nreturn this.http.post<Product>('http://localhost:8082/api/products',product)\r\n\r\n  }\r\n\r\n  // updateProduct(id:number, product: Product): Observable<Product> {\r\n  //   return this.http.put<Product>(`http://localhost:8082/api/products/${product.id}`, product);\r\n  // }\r\n\r\n  deleteProduct(productId: number): Observable<void> {\r\n    const url = `http://localhost:8082/api/products/${productId}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n\r\n  private apiUrl = 'http://localhost:8082/api/products';\r\n\r\n\r\n  updateProduct(product: Product): Observable<Product> {\r\n    const url = `http://localhost:8082/api/products/${product.id}`;\r\n    return this.http.put<Product>(url, product);\r\n  }\r\n\r\n  \r\n  searchProducts(name: string): Observable<Product[]> {\r\n    const url = `http://localhost:8082/api/products/name/${name}`;\r\n    return this.http.get<Product[]>(url);\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}